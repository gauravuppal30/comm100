{"version":3,"sources":["component/utils/utils.jsx","component/problem/Problem1.jsx","component/problem/Problem2.jsx","component/carousel/Carousel.jsx","component/employee/Employee.jsx","component/problem/Problem3.jsx","component/navigation/Navigation.jsx","App.js","reportWebVitals.js","index.js"],"names":["jsonData","a","b","c","Problem1","visitorsList","getSerializedSubData","movies","serializedMovieList","forEach","movie","name","duration","IMDB","serializedList","visitor","age","favoriteMovies","getVisitors","length","src","alt","map","index","className","vIndex","Problem2","Carousel","id","href","Employee","useState","employeeJson","data","employees","employee","employee_name","employee_salary","employee_age","steps","message","trigger","user","end","Problem3","showChat","setShowChat","onClick","Navigation","to","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"81FAAMA,EAAW,CACf,CACEC,EAAG,YACHC,EAAG,KACHC,EAAG,CACD,CACEF,EAAG,WACHC,EAAG,IACHC,EAAG,aAEL,CACEF,EAAG,gBACHC,EAAG,IACHC,EAAG,aAEL,CACEF,EAAG,WACHC,EAAG,IACHC,EAAG,eAIT,CACEF,EAAG,WACHC,EAAG,KACHC,EAAG,CACD,CACEF,EAAG,WACHC,EAAG,IACHC,EAAG,aAEL,CACEF,EAAG,gBACHC,EAAG,IACHC,EAAG,aAEL,CACEF,EAAG,WACHC,EAAG,IACHC,EAAG,gBCpCI,SAASC,IACtB,IAAMC,EDyCO,WAcb,IAAMC,EAAuB,SAACC,GAC5B,IAAIC,EAAsB,GAW1B,OAVAD,EAAOE,SAAQ,SAACC,GACdF,EAAmB,sBACdA,GADc,CAEjB,CACEG,KAAMD,EAAMT,EACZW,SAAUF,EAAMR,EAChBW,KAAMH,EAAMP,QAIXK,GAGLM,EAAiB,GAarB,OAXAd,EAASS,SAAQ,SAACM,GAChBD,EAAc,sBACTA,GADS,CAEZ,CACEH,KAAMI,EAAQd,EACde,IAAKD,EAAQb,EACbe,eAAgBX,EAAqBS,EAAQZ,SAK5CW,ECnFcI,GAYrB,OAAIb,EAAac,OAAS,EACjB,qBAAKC,IAAI,yBAAyBC,IAAI,WAI7C,gCACGhB,EAAaiB,KAAI,SAACP,EAASQ,GAAV,OAChB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UACE,mDADF,OACiC,+BAAOT,EAAQJ,UAEhD,sBAAKa,UAAU,MAAf,sCACkB,+BAAOT,EAAQC,MADjC,uBAGA,sBAAKQ,UAAU,SAAf,gCAEE,8BA1BaP,EA2BIF,EAAQE,eA1B1BA,EAAeK,KAAI,SAACf,EAAQkB,GAAT,OACxB,+BACE,+CAAkBlB,EAAOI,QACzB,6CAAgBJ,EAAOK,YACvB,gDAAmBL,EAAOM,UAHnBY,cAe2BF,GAjBlB,IAACN,KAgCnB,4BACE,+CAEF,+BACE,+BACE,qGAGA,mEAEF,+BACE,yFACA,qFAFF,OAIA,+BACE,mJAEwD,OAExD,4IAKF,+BACE,6JAEqE,OAErE,oCCnEK,SAASS,IA4DpB,OACE,sBAAKF,UAAU,WAAf,UACE,sBAAKA,UAAU,QAAf,UA1DE,8BACE,8ZA2DF,+BACE,qDACA,wJAKF,uBACA,0BAEF,sBAAKA,UAAU,QAAf,UAnDE,8BACE,kWAoDF,+BACE,mDACA,yIAIA,iEAEF,uBACA,0BAEF,sBAAKA,UAAU,QAAf,UA/CE,8BACE,2vBAgDF,6BACE,sN,mCCxFG,SAASG,IACtB,OACE,sBAAKH,UAAU,SAAf,UAEE,sBAAKA,UAAU,SAAf,UACE,qBAAKI,GAAG,UAAR,eACA,qBAAKA,GAAG,UAAR,eACA,qBAAKA,GAAG,UAAR,eACA,qBAAKA,GAAG,UAAR,eACA,qBAAKA,GAAG,UAAR,kBAGF,mBAAGC,KAAK,WAAR,eACA,mBAAGA,KAAK,WAAR,eACA,mBAAGA,KAAK,WAAR,eACA,mBAAGA,KAAK,WAAR,eACA,mBAAGA,KAAK,WAAR,kB,kBCdS,SAASC,IAAY,IAAD,EACCC,mBAASC,EAAaC,MADvB,mBAC1BC,EAD0B,UAoBjC,OAAIA,EAAUf,OAAS,EACd,qBAAKC,IAAI,yBAAyBC,IAAI,WAI7C,qBAAKG,UAAU,iBAAf,SACGU,EAAUZ,KAAI,SAACa,GACd,OACE,sBAAuBX,UAAU,mBAAjC,UACE,yCAAYW,EAASC,iBACrB,2CAAcD,EAASE,mBACvB,wCAAWF,EAASG,kBAHZH,EAASP,SC3B7B,IAAMW,EAAQ,CACZ,CACEX,GAAI,IACJY,QAAS,qBACTC,QAAS,KAEX,CACEb,GAAI,IACJc,MAAM,EACND,QAAS,KAEX,CACEb,GAAI,IACJY,QAAS,wCACTG,KAAK,IAIM,SAASC,IAAY,IAAD,EACDb,oBAAS,GADR,mBAC1Bc,EAD0B,KAChBC,EADgB,KAGjC,OACE,sBAAKtB,UAAU,WAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,qBAAKA,UAAU,cAAcuB,QAAS,kBAAMD,GAAaD,IAAzD,gCAGCA,GACC,sBAAKrB,UAAU,gBAAf,UACE,sBACEuB,QAAS,kBAAMD,GAAaD,IAC5BrB,UAAU,oBAFZ,eAMA,cAAC,IAAD,CAASe,MAAOA,U,MCnCX,SAASS,IACtB,OACE,qBAAKxB,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,oBAAIA,UAAU,oDAAd,SACE,qBAAIA,UAAU,WAAd,UACE,cAAC,IAAD,CAAMA,UAAU,WAAWyB,GAAG,MAA9B,uBAIA,cAAC,IAAD,CAAMzB,UAAU,WAAWyB,GAAG,MAA9B,uBAIA,cAAC,IAAD,CAAMzB,UAAU,WAAWyB,GAAG,MAA9B,gCASR,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,MAAMC,UAAWhD,IACnC,cAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,MAAMC,UAAW1B,IACnC,cAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,MAAMC,UAAWR,SCtB5BS,MARf,WACE,OACE,qBAAK7B,UAAU,MAAf,SACE,cAAC,EAAD,OCMS8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.81660ba5.chunk.js","sourcesContent":["const jsonData = [\n  {\n    a: \"xiao ming\",\n    b: \"18\",\n    c: [\n      {\n        a: \"Zootopia\",\n        b: 109,\n        c: \"tt2948356\",\n      },\n      {\n        a: \"Hacksaw Ridge\",\n        b: 139,\n        c: \"tt2119532\",\n      },\n      {\n        a: \"Kiminona\",\n        b: 106,\n        c: \"tt5311514\",\n      },\n    ],\n  },\n  {\n    a: \"ming Xio\",\n    b: \"28\",\n    c: [\n      {\n        a: \"Zootopia\",\n        b: 109,\n        c: \"tt2948356\",\n      },\n      {\n        a: \"Hacksaw Ridge\",\n        b: 139,\n        c: \"tt2119532\",\n      },\n      {\n        a: \"Kiminona\",\n        b: 106,\n        c: \"tt5311514\",\n      },\n    ],\n  },\n];\n\nexport default function getVisitors() {\n    // useEffect(() => {\n  //  getVisitorsAPI()\n  // }, []);\n  // const getVisitorsAPI = () => {\n  //   fetch(\"https://run.mocky.io/v3/607776d8-51a3-4030-b7d5-647f5abf1772\")\n  //     .then((response) => {\n  //       console.log(\"res\", response);\n\n  //       if (response && response.data) setVisitorsList(response.data);\n  //     })\n  //     .catch((error) => console.error(\"Visitors API Failed\", error));\n  // };\n\n  const getSerializedSubData = (movies) => {\n    let serializedMovieList = [];\n    movies.forEach((movie) => {\n      serializedMovieList = [\n        ...serializedMovieList,\n        {\n          name: movie.a,\n          duration: movie.b,\n          IMDB: movie.c,\n        },\n      ];\n    });\n    return serializedMovieList;\n  };\n\n  let serializedList = [];\n\n  jsonData.forEach((visitor) => {\n    serializedList = [\n      ...serializedList,\n      {\n        name: visitor.a,\n        age: visitor.b,\n        favoriteMovies: getSerializedSubData(visitor.c),\n      },\n    ];\n  });\n\n  return serializedList;\n}\n","import { useState, useEffect } from \"react\";\nimport getVisitors from \"../utils/utils\";\n\nexport default function Problem1() {\n  const visitorsList = getVisitors();\n\n  const getMoviesInfo = (favoriteMovies) => {\n    return favoriteMovies.map((movies, vIndex) => (\n      <li key={vIndex}>\n        <div>Movie Name: {movies.name}</div>\n        <div>DUration: {movies.duration}</div>\n        <div>IMDB rating: {movies.IMDB}</div>\n      </li>\n    ));\n  };\n\n  if (visitorsList.length < 1) {\n    return <img src=\"./images/Preloader.gif\" alt=\"loader\" />;\n  }\n\n  return (\n    <div>\n      {visitorsList.map((visitor, index) => (\n        <div className=\"information\" key={index}>\n          <div className=\"name\">\n            <strong>Visitor Name:</strong> <span>{visitor.name}</span>\n          </div>\n          <div className=\"age\">\n            This visitor is <span>{visitor.age}</span> year's old\n          </div>\n          <div className=\"movies\">\n            Movies information:\n            <ul>\n              {getMoviesInfo(visitor.favoriteMovies)}\n            </ul>\n          </div>\n        </div>\n      ))}\n      <p>\n        <strong>Answers</strong>\n      </p>\n      <ul>\n        <li>\n          <p>\n            Property could be primitive type, another object or array of objects\n          </p>\n          <strong>Object and array of object</strong>\n        </li>\n        <li>\n          <p> Please give the approximate compatibility of browsers: </p>\n          <strong>All browser will be supported by the above code</strong>.\n        </li>\n        <li>\n          <p>\n            Suppose the response is very large, does the solution have a\n            performance bottleneck? Like block browser rendering.{\" \"}\n          </p>\n          <strong>\n            We can use lazy loading to avoid block browser rendering. And other\n            option is to handle at backend.\n          </strong>\n        </li>\n        <li>\n          <p>\n            What if we want to get the uncompact response and make it\n            serializable and get all the properties with Object.keys function?{\" \"}\n          </p>\n          <strong></strong>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","export default function Problem2() {\n\n    const code1=()=>{\n        return (\n          <pre>\n            <code>\n              {`**Code snippet 1**\n                var rows = [];\n                for (var i = 0; i < args.length; i++) {\n                    var obj = {\n                        chatId: chatId\n                    };\n                    rows.push(obj);\n                }var chatId = $(\"#chat\").attr(\"chatId\");\n                $.post('/<apiendpoint>', { data: JSON.stringify(rows) });`}\n            </code>\n          </pre>\n        );\n    }\n\n\n    const code2=()=>{\n        return (\n          <pre>\n            <code>\n              {`**Code Snippet 2**\n                validateInteger : function(str, min, max) {\n                if (str==null || str==undefined || (str + \"\").trim().length < 1) {\n                        return Em.I18n.t('number.validate.empty');\n                } else {\t    }\n                return null;\n                },`}\n            </code>\n          </pre>\n        );\n    }\n\n\n    const code3=()=>{\n        return (\n          <pre>\n            <code>\n              {`**Code Snippet 3**\n                chatNotificationReceived: function(notification, message, sender) {\n                    if (notification === \"SHOW_ALERT\") {\n                        if (typeof message.type === \"undefined\") { message.type = \"alert\"; }\n                            if (message.type == \"alert\") {\n                                this.show_alert(message, sender);\n                            } else if (message.type = \"notification\") {\n                                this.show_notification(message);\n                            }\n                        } else if (notification === \"HIDE_ALERT\") {\n                            this.hide_alert(sender);\n                        }\n                    }`}\n            </code>\n          </pre>\n        );\n    }\n\n    return (\n      <div className=\"problem2\">\n        <div className=\"code1\">\n          {code1()}\n          <ul>\n            <li>args is not defined</li>\n            <li>\n              \"var chatId = $(\"#chat\").attr(\"chatId\");\" this should be defined\n              above for loop otherwise chatId will be undefined.\n            </li>\n          </ul>\n          <br />\n          <br />\n        </div>\n        <div className=\"code2\">\n          {code2()}\n          <ul>\n            <li>Em is not defined</li>\n            <li>\n              \"{`if(!str || !!str.trim().length < 1)`}\" this is another cleaner\n              way of writting the if condition\n            </li>\n            <li>else statement is not needed</li>\n          </ul>\n          <br />\n          <br />\n        </div>\n        <div className=\"code3\">\n          {code3()}\n          <ul>\n            <li>\n              if (message.type = \"notification\") this statement is an\n              assignation statement. it will not compare anything. This should written like \"\n              if (message.type == \"notification\")\"\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n\n\n    \n}\n","import \"./Carousel.css\";\n\nexport default function Carousel() {\n  return (\n    <div className=\"slider\">\n\n      <div className=\"slides\">\n        <div id=\"slide-1\">1</div>\n        <div id=\"slide-2\">2</div>\n        <div id=\"slide-3\">3</div>\n        <div id=\"slide-4\">4</div>\n        <div id=\"slide-5\">5</div>\n      </div>\n\n      <a href=\"#slide-1\">1</a>\n      <a href=\"#slide-2\">2</a>\n      <a href=\"#slide-3\">3</a>\n      <a href=\"#slide-4\">4</a>\n      <a href=\"#slide-5\">5</a>\n    </div>\n  );\n}\n\n\n","import { useState, useEffect } from \"react\";\nimport employeeJson from \"../../jsonData/employee.json\";\nimport \"./Employee.css\";\n\nexport default function Employee() {\n  const [employees, setEmployees] = useState(employeeJson.data);\n\n  //   useEffect(() => {\n  //     fetchEmployeeData();\n  //   }, [employees]);\n\n  //   const fetchEmployeeData = async () => {\n  //     return fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n  //       .then((response) => {\n  //         console.log(\"res\", response);\n  //         if (response.status === 200) {\n  //           setEmployees(response.data || []);\n  //         }\n  //       })\n  //       .catch((error) => {\n  //         console.error(\"error\", error);\n  //       });\n  //   };\n\n  if (employees.length < 1) {\n    return <img src=\"./images/Preloader.gif\" alt=\"loader\" />;\n  }\n\n  return (\n    <div className=\"employee-group\">\n      {employees.map((employee) => {\n        return (\n          <div key={employee.id} className=\"employee-details\">\n            <div>Name: {employee.employee_name}</div>\n            <div>Salary: {employee.employee_salary}</div>\n            <div>Age: {employee.employee_age}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import ChatBot from \"react-simple-chatbot\";\nimport Carousel from \"../carousel/Carousel\";\nimport { useState } from \"react\";\nimport Employee from \"../employee/Employee\";\n\nconst steps = [\n  {\n    id: \"1\",\n    message: \"What is your name?\",\n    trigger: \"2\",\n  },\n  {\n    id: \"2\",\n    user: true,\n    trigger: \"3\",\n  },\n  {\n    id: \"3\",\n    message: \"Hi {previousValue}, nice to meet you!\",\n    end: true,\n  },\n];\n\nexport default function Problem3() {\n  const [showChat, setShowChat] = useState(false);\n\n  return (\n    <div className=\"problem3\">\n      <Carousel />\n      <Employee />\n      <div className=\"sticky-chat\" onClick={() => setShowChat(!showChat)}>\n        How may I help you\n      </div>\n      {showChat && (\n        <div className=\"bot-container\">\n          <span\n            onClick={() => setShowChat(!showChat)}\n            className=\"chat-bot-close-me\"\n          >\n            X\n          </span>\n          <ChatBot steps={steps} />\n        </div>\n      )}\n    </div>\n  );\n}\n","import { Route, Link, BrowserRouter as Router } from \"react-router-dom\";\nimport Problem1 from \"../problem/Problem1\";\nimport Problem2 from \"../problem/Problem2\";\nimport Problem3 from \"../problem/Problem3\";\nimport \"./Navigation.css\";\n\nexport default function Navigation() {\n  return (\n    <div className=\"main-container\">\n      <Router>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <ul className=\"navbar navbar-dark bg-dark justify-content-center\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/p1\">\n                  Problem 1\n                </Link>\n\n                <Link className=\"nav-link\" to=\"/p2\">\n                  Problem 2\n                </Link>\n\n                <Link className=\"nav-link\" to=\"/p3\">\n                  Problem 3\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        {/* <Route exact path=\"/\" component={HomePlanets} /> */}\n        <Route exact path=\"/p1\" component={Problem1} />\n        <Route exact path=\"/p2\" component={Problem2} />\n        <Route exact path=\"/p3\" component={Problem3} />\n      </Router>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport Navigation from \"./component/navigation/Navigation\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}